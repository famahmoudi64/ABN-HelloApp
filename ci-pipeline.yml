# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger: none

pool: 
   name: Default

  #  vmImage: ubuntu-latest

stages:
  - stage: CIstage
    jobs:
      - job: CIjob
        steps:
        - task: Maven@4
          displayName: Build & Package Java by Maven
          inputs:
            mavenPomFile: 'pom.xml'
            goals: 'package'
            publishJUnitResults: true
            testResultsFiles: '**/surefire-reports/TEST-*.xml'
            javaHomeOption: 'JDKVersion'
            mavenVersionOption: 'Default'
            mavenAuthenticateFeed: false
            effectivePomSkip: false
            sonarQubeRunAnalysis: false

        - task: CopyFiles@2
          displayName: Copy Jar file to Staging Directory
          inputs:
            Contents: '**/*.jar'
            TargetFolder: '$(Build.ArtifactsStagingDirectory)'
        - task: PublishBuildArtifacts@1
          displayName: Publish to Azure Pipeline
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)'
            ArtifactName: 'drop'
            publishLocation: 'Container'

        # - task: Bash@3
        #   inputs:
        #     targetType: 'inline'
        #     script: |
        #       # create docker image
        #       docker build -t HelloAppImage .
        #       docker tag HelloAppImage  HelloAppImage:1.0
        #       docker login abnacr.azurecr.io
        #       docker push  HelloAppImage:1.0

        - task: Docker@2
          inputs:
            containerRegistry: 'acr-service-connection'
            repository: 'abnacr.azurecr.io/HelloApp'
            command: 'buildAndPush'
            Dockerfile: '**/Dockerfile'

